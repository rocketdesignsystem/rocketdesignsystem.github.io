{"version":3,"file":"main.bd15271af830f45c6759.bundle.js","sources":["webpack:///./src/components/listbox.js"],"sourcesContent":["import React from 'react';\r\nimport { generateRandomString, makeOptions, highlightText } from '../util.js';\r\n\r\n/**\r\n * Focused: when the option is moved to \r\n * Selected: when the option is selected\r\n *\r\n * For a single selection dropdown, focused and selected are same.\r\n */\r\nclass ListBox extends React.Component {\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n    }\r\n\r\n    getOptionByIndex( index ) {\r\n\r\n        return this.props.options[ index ];\r\n    }\r\n\r\n    handleOptionClick( { index, value, label } ) {\r\n\r\n        this.props.onOptionClick( { index, value, label } );\r\n    }\r\n\r\n    render() {\r\n\r\n        let className = this.props.shouldHide \r\n                      ? 'rocket__listbox rocket__listbox--hidden'\r\n                      : 'rocket__listbox';\r\n\r\n        return  <ul className={ className }\r\n                     role=\"listbox\"\r\n                     tabIndex=\"-1\"\r\n                     id={ this.props.id ? this.props.id : 'listbox-' + generateRandomString() }\r\n                     aria-labelledby={ this.props.labelledby }\r\n                >\r\n                {\r\n                    this.props.options.map( (option, index) => {\r\n\r\n                        return  <ListBoxOption \r\n                                    value={ option.value }\r\n                                    label={ option.label }\r\n                                    isSelected={ this.props.indexOfOptionSelected === index }\r\n                                    isFocused={ this.props.indexOfOptionFocused === index }\r\n                                    index={ index }\r\n                                    key={ index }\r\n                                    onOptionClick={ this.handleOptionClick.bind(this) }\r\n                                    highlight={ this.props.highlight }\r\n                                />\r\n\r\n                    } )\r\n                }\r\n                </ul>\r\n    }\r\n}\r\n\r\nListBox.defaultProps = {\r\n\r\n    options: [],\r\n    labelledby: '',\r\n    shouldHide: false,\r\n    indexOfOptionFocused: -1,\r\n    indexOfOptionSelected: -1,\r\n    highlight: '',\r\n    onOptionClick: () => {}\r\n};\r\n\r\nconst ListBoxOption = props  => {\r\n\r\n    let containerClass = 'rocket__listbox__option';\r\n    \r\n    containerClass += props.isSelected ? ' rocket__listbox__option--selected' : '';\r\n    containerClass += props.isFocused ? ' rocket__listbox__option--focused' : '';\r\n\r\n    let html = { __html: highlightText( props.label, props.highlight, match => \r\n\r\n        `<span class=\"rocket__autocomplete__match\">${match}</span>` \r\n    ) };\r\n\r\n    return  <li className={ containerClass }\r\n                 role=\"option\" \r\n                 aria-selected={ props.isSelected ? 'true' : 'false' }\r\n                 id={ props.id ? props.id : 'listbox-option-' + generateRandomString() }\r\n                 onMouseDown={ () => props.onOptionClick( { index: props.index, value: props.value, label: props.label } ) }\r\n                 dangerouslySetInnerHTML={ html }\r\n            >\r\n            </li>\r\n}\r\n\r\nListBoxOption.defaultProps = {\r\n\r\n    id: '',\r\n    isSelected: false,\r\n    isFocused: false,\r\n    index: -1,\r\n    highlight: '',\r\n    onOptionClick: () => {}\r\n};\r\n\r\nexport {\r\n\r\n    ListBox,\r\n    ListBoxOption\r\n};"],"mappings":"AASA","sourceRoot":""}